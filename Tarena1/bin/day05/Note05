分支流程控

if(布尔表达式/分支条件){
  //语句块
}

if(布尔表达式/分支条件){
  //语句块1
}else{
  //语句块2
}

if(条件1){
  //语句块1
}else if(条件2){
  //语句块2
}else if(条件3){
  //语句块3
}

 1) 尽量使用肯定条件，可以减少逻辑思考错误
 2) 减少使用else
 3) 减少嵌套层次，一般不要超过2层
 4) 语句块不要超过一个屏幕！
 5) 严格遵守缩进规则！
 
switch(整数条件){
  case 常量: (break;)
  case 常量: (break;)
  default:
}//性能非常好！！

循环流程控制
  for  while  do...while
  
 1)for 经典用法：与次数，连续变化的数列有关的循环 
   for(初始化;循环条件;递增){
     循环体
   }
    
 2)for可以替代任何循环
  2.1) 死循环
   for(;;){
   }
   
  2.2)
   for(;循环条件;){
   }
  
  for  while  do...while比较
  1) for 常用，“经典使用方式”与固定次数有关循环处理,
     主要用于解居然与次数有关的循环。
  2) for 可以替代其它两种循环
   2.1) for (;循环条件;){} 替代 while(循环条件){}
   2.2) 死循环 for(;;){} 替代 while(true){}
   2.3) for(;;){if(循环条件) break;} 替代 do...while(循环条件);
  有些程序员只使用for解决问题
  3) while 循环用于在循环体开始的时候判断循环条件，
     一般用于解决跟次数无关的
  4) do...while 循环用于在循环体结束时候判断循环条件
  5) 在其他情况下使用 死循环！在适当的条件使用break
  循环的选择与次数有关使用for，循环条件在循环体开始位置使用while,
  循环条件在循环结束的位置使用do while,其它情况下使用死循环+break。
  
Java 数组(Array)
数组：类型一致的一组东西

 数组变量(引用变量)：是标识数组变量名，是引用类型变量
 数组(数组对象)：是全部元素的集合，是内存中连续的存储单元 
 数组元素：是数组中每个具体的元素
 
如：
 int[] ary = new int[3];
 
 ary 是数组变量
 new int[3] 是数组
 ary[0] 是数组元素 
 
 int[] ary1 = ary;
 
 数组迭代
   遍历处理数组的每个元素。
   
 方法
  1) 方法是业务的功能
  2) 方法是利用数据计算实现业务功能
  
 方法
  1) 功能：计算两点之间距离
  2) 功能实现：利用勾股定理计算两点之间距离
 
 
 
 
 
 
 
 
 
 
 
 
 